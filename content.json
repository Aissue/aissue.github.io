{"pages":[],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/09/22/hello-world/"},{"title":"zookeeper数据存储","text":"前言&emsp;&emsp;一次公司故障，怀疑zk版本问题，决定重装zk。由于之前zk安装的不规范性，所以本次按照公司规范，重新安装成功。重启后发现zk数据丢失…:fa-frown-o:&emsp;&emsp;虽然有zk节点迁移的工具类，但是面对那么多的数据，如此迁移必然效率低下，怎么办？zk一定有快速实现数据迁移的方法，众里寻他千百度，果然如此…:fa-angellist: zk的数据与存储 内存数据&emsp;1. DataTree&emsp;&emsp;DataTree是内存数据存储的核心，是一个树结构，代表了内存中一份完整的数据。DataTree不包含任何与网络、客户端连接及请求处理相关的业务逻辑，是一个独立的组件。&emsp;2. DataNode&emsp;&emsp;DataNode是数据存储的最小单元，其内部除了保存了结点的数据内容、ACL列表、节点状态之外，还记录了父节点的引用和子节点列表两个属性，其也提供了对子节点列表进行操作的接口。&emsp;3. ZKDatabase&emsp;&emsp;Zookeeper的内存数据库，管理Zookeeper的所有会话、DataTree存储和事务日志。ZKDatabase会定时向磁盘dump快照数据，同时在Zookeeper启动时，会通过磁盘的事务日志和快照文件恢复成一个完整的内存数据库。 事务日志&emsp;1. 文件存储&emsp;&emsp;在配置Zookeeper集群时需要配置dataDir目录，其用来存储事务日志文件。也可以为事务日志单独分配一个文件存储目录:dataLogDir。若配置dataLogDir为/home/admin/zkData/zk_log，那么Zookeeper在运行过程中会在该目录下建立一个名字为version-2的子目录，该目录确定了当前Zookeeper使用的事务日志格式版本号，当下次某个Zookeeper版本对事务日志格式进行变更时，此目录也会变更，即在version-2子目录下会生成一系列文件大小一致(64MB)的文件。 数据快照&emsp;&emsp;数据快照是Zookeeper数据存储中非常核心的运行机制，数据快照用来记录Zookeeper服务器上某一时刻的全量内存数据内容，并将其写入指定的磁盘文件中。&emsp;1. 文件存储&emsp;&emsp;与事务文件类似，Zookeeper快照文件也可以指定特定磁盘目录，通过dataDir属性来配置。若指定dataDir为/home/admin/zkData/zk_data，则在运行过程中会在该目录下创建version-2的目录，该目录确定了当前Zookeeper使用的快照数据格式版本号。在Zookeeper运行时，会生成一系列文件。 zk启动时的数据初始化&emsp;&emsp;在Zookeeper服务器启动期间，首先会进行数据初始化工作，用于将存储在磁盘上的数据文件加载到Zookeeper服务器内存中。 单点启动时的数据初始化 集群间的数据同步&emsp;&emsp;整个集群完成Leader选举后，Learner会向Leader进行注册，当Learner向Leader完成注册后，就进入数据同步环节，同步过程就是Leader将那些没有在Learner服务器上提交过的事务请求同步给Learner服务器，大体过程如下： 总结&emsp;&emsp;理解了zk的存储数据的方式，再进行数据恢复就简单多了，只要找到了原zk的快照文件以及日志文件，放到新zk相应的目录下，重启就可以实现数据同步了。so easy~~","link":"/2019/09/28/zookeeper数据存储/"},{"title":"zookeeper在CentOS7上的安装步骤","text":"准备工作下载 zookeeper-3.4.10.tar.gz，传送带===&gt;zookeeper-3.4.10(ps：其他版本按照同样的安装步骤进行即可) 开始安装 创建安装目录： 1$ mkdir -p /usr/local/zookeeper 将安装包放到步骤1创建的目录下，并解压： 1$ tar -zxvf zookeeper-3.4.10.tar.gz 进入配置文件目录，并依次执行以下shell命令行： 123$ cd zookeeper-3.4.10/conf/$ cp zoo_sample.cfg zoo.cfg$ vim zoo.cfg 打开的配置文件,并配置数据文件夹，日志文件夹，如下图所示: 1234567891011121314151617181920212223242526272829303132333435363738# The number of milliseconds of each tick # zookeeper 定义的基准时间间隔，单位：毫秒 tickTime=2000 # The number of ticks that the initial # synchronization phase can take initLimit=10 # The number of ticks that can pass between # sending a request and getting an acknowledgement syncLimit=5 # the directory where the snapshot is stored. # do not use /tmp for storage, /tmp here is just # example sakes. # dataDir=/tmp/zookeeper # 数据文件夹 需要提前创建 dataDir=/usr/local/zookeeper/data # 日志文件夹 需要提前创建 dataLogDir=/usr/local/zookeeper/log # the port at which the clients will connect # 客户端访问 zookeeper 的端口号 clientPort=2181 # the maximum number of client connections. # increase this if you need to handle more clients #maxClientCnxns=60 # # Be sure to read the maintenance section of the # administrator guide before turning on autopurge. # # http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance # # The number of snapshots to retain in dataDir #autopurge.snapRetainCount=3 # Purge task interval in hours # Set to \"0\" to disable auto purge feature #autopurge.purgeInterval=1 设置环境变量：用 vim 打开 /etc/ 目录下的配置文件 profile：1$ vim /etc/profile 打开后追加如下内容： 12345# idea - zookeeper-3.4.10 config start - 2018-09-06export ZOOKEEPER_HOME=/usr/local/zookeeper/zookeeper-3.4.10/export PATH=$ZOOKEEPER_HOME/bin:$PATHexport PATH# idea - zookeeper-3.4.10 config start - 2018-09-06 保存并执行如下命令进行配置刷新： 1$ source /etc/profile 检验是否安装成功按照以上步骤进行安装完毕后，依次执行以下命令检验是否安装成功： 12$ cd /usr/local/services/zookeeper/zookeeper-3.4.10/bin$ ./zkServer.sh start 若显示如下，说明安装成功： 123ZooKeeper JMX enabled by defaultUsing config: /usr/local/services/zookeeper/zookeeper-3.4.9/bin/../conf/zoo.cfgStarting zookeeper ... STARTED 启停zookeeper服务查询状态： 1$ ./zkServer.sh status 开启服务： 1$ ./ zkServer.sh start 关闭服务： 1$ ./ zkServer.sh stop 重启服务： 1$ ./ zkServer.sh restart zookeeper-cli命令行补充 连接zk： 1$ ./ zkCli.sh -server 127.0.0.1:2181 显示根目录下文件 12$ ls / #查看当前节点数据$ ls2 / #查看当前节点数据，可以看到更新次数等数据 创建文件 12$ create /config \"test\" #创建一个新的节点并设置关联值$ create /config \"\" #创建一个新的空节点 获取/设置文件内容 12$ get /brokers #获取节点内容$ set /zk \"zkData\" #设置zk文件内容 删除文件 12$ delete /brokers #删除节点$ rmr /brokers #删除节点及子节点 到此为止zookeeper服务已经安装完毕，请开始zookeeper分布式注册之旅吧…[手工笑脸]","link":"/2019/09/24/zookeeper安装步骤/"}],"tags":[{"name":"zookeeper","slug":"zookeeper","link":"/tags/zookeeper/"}],"categories":[{"name":"helloworld","slug":"helloworld","link":"/categories/helloworld/"},{"name":"中间件","slug":"中间件","link":"/categories/中间件/"}]}